@model PagedList.IPagedList<MvcNorthwindJatko.Models.Products>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" />
<script ssrc="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.6.1/chart.js"></script>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<!--tämä on JQueryä-->

@section scripts {

    <script type="text/javascript">

        //JQuery Dropdown valikko 1.pv - video 15

        $("#singleSelectedCategoryID").on("change", function () {

            //Getting Value

            var selValue = $("#singleSelectedCategoryID").val();

            document.getElementById("ProductCategory").value = selValue;

        });



        //Klikkauksen kuuntelija

        //Tuotteen myynti -kaavion

        $(function () {

            $(".getProductName").click(function () {

                let productName = $(this).data("productname");

                drawLineChart(productName);

            })

        });



        //Datan haku kontrollerista

        function drawLineChart(productName) {

            let url = "/Products/_ProductSalesPerDate/?productName=" + productName;

            var jsonData = $.ajax({

                url: url,

                dataType: 'json',

            }).done(function (results) {

                console.log(results);

                //Split timestamp and data into separate arrays

                var salesLabels = [], salesData = [];

                for (let i = 0; i < results.length; i++) {

                    salesData.push(results[i].DailySales);

                    salesLabels.push(results[i].OrderDate);

                }

                renderChart(salesData, salesLabels, productName);

            });

        }



        //Chartin piirto ja modaali-ikkunan kutsu

        function renderChart(dataValues, labelTexts, productName) {

            var ctx = document.getElementById('barcanvas').getContext('2d');

            var barcanvas = new Chart(ctx, {

                type: 'line',

                data: {

                    labels: labelTexts,

                    datasets: [{

                        label: 'Daily product sales for ' + productName,

                        data: dataValues,

                        backgroundColor: [

                            'rgba(255, 99, 232, 0.2)'

                        ],

                        borderColor: [

                            'rgba(255, 99, 132, 1)'

                        ],

                        borderWidth: 2

                    }]

                },

                options: {

                    scales: {

                        yAxes: [{

                            ticks: {

                                beginAtZero: true,

                                stepSize: 100

                            }

                        }]

                    }

                }

            });

            $('#ProductSalesPerDateModal').modal('show');

        }



    </script>

}

@{
    ViewBag.Title = "Index";
}

@*@section scripts {
        <script type="text/javascript">
            $("#singleSelectedCategoryID").on("change", function () {
                //Getting Value
                var selValue = $("#singleSelectedCategoryID").val();
                document.getElementById("ProductCategory").value = selValue;
            });
        </script>
    }*@

<h2>Products</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Index", "Products", FormMethod.Get))
{
    <div class="input-group">
        <p class="px-1">@Html.Label("Find by name:")</p>
        <p class="px-1">@Html.TextBox("SearchString1", ViewBag.currentFilter1 as string, new { @class = "form-control", id = "searchByName" })</p>
        <p class="px-1">@Html.Label("Find by Product Category:")</p>

        <p class="px-1">
            @Html.Hidden("ProductCategory", ViewBag.currentProductCategory as string, new
            {
                @id = "ProductCategory",
              @class = "form-control"
            })
        </p> @*piilotettu kenttä, jolla tehdään kontrollerihaku*@
        <p class="px-1">
            @Html.DropDownList("CategoryID", null, htmlAttributes: new
            {
                @id = "singleSelectedCategoryID",
                 @class =
             "form-control"
            })
        </p>
        <p class="px-1"><input type="submit" value="Search" class="form-control" /></p>
    </div>
}

<table class="table">
    <tr>
        <th></th>
        <th>                                 @*parametri controllerille, Viewbag näkymälle*@
            @Html.ActionLink("Products", "Index", new { sortOrder = ViewBag.ProductNameSortParm, currentFilter1 = ViewBag.currentFilter1, currentProductCategory = ViewBag.currentProductCategory })
        </th>
        <th>
            QuantityPerUnit
        </th>
        <th>
            @Html.ActionLink("UnitPrice", "Index", new { sortOrder = ViewBag.UnitPriceSortParm, currentFilter1 = ViewBag.currentFilter1, currentProductCategory = ViewBag.currentProductCategory })
        </th>
        <th>
            UnitsInStock
        </th>
        <th>
            UnitsOnOrder
        </th>
        <th>
            ReorderLevel
        </th>
        <th>
            Discontinued
        </th>
        <th>
            imagelink
        </th>
        <th>
            CategoryName
        </th>
        <th>
            CompanyName
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                <button class="btn-dark getProductname" style="border-radius:4px;" data-productname="@item.ProductName"></button>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuantityPerUnit)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitsInStock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitsOnOrder)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReorderLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Discontinued)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.imagelink)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Categories.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Suppliers.CompanyName)
            </td>
            <td>
                <a class="btn btn-success" href="~/Products/Edit/@item.ProductID">
                    <svg class="bi bi-pencil-square" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                        <path d="M15.502 1.94a.5.5 0 010 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 01.707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 000-.121.196l-.805 2.414a.25.25 0 00.316.316l2.414-.805a.5.5 0 00.196-.12l6.813-6.814z" />
                        <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 002.5 15h11a1.5 1.5 0 001.5-1.5v-6a.5.5 0 00-1 0v6a.5.5 0 01-.5.5h-11a.5.5 0 01-.5.5v-11a.5.5 0 01.5-.5H9a.5.5 0 000-1H2.5A1.5 1.5 0 001 2.5v11z" clip-rule="evenodd" />
                    </svg>
                </a>
                <a class="btn btn-primary" href="~/Products/Details/@item.ProductID">
                    <svg class="bi bi-info-square" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" d="M14 1H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1V2a1 1 0 00-1-1zM2 0a2 2 0 00-2 2v12a2 2 0 0022h12a2 2 0 002-2V2a2 2 0 00-2-2H2z" clip-rule="evenodd" />
                        <path d="M8.93 6.588l-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.2521.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588z" />
                        <circle cx="8" cy="4.5" r="1" />
                    </svg>
                </a>

                <a class="btn btn-danger" href="~/Products/Delete/@item.ProductID">
                    <svg class="bi bi-x-square" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" d="M14 1H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1V2a1 1 0 00-1-1zM2 0a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2V2a2 2 0 00-2-2H2z" clip-rule="evenodd" />
                        <path fill-rule="evenodd" d="M11.854 4.146a.5.5 0 010 .708l-7 7a.5.5 0 01-.708-.708l7-7a.5.5 0 01.708 0z" clip-rule="evenodd" />
                        <path fill-rule="evenodd" d="M4.146 4.146a.5.5 0 000 .708l7 7a.5.5 0 00.708-.708l-7-7a.5.5 0 00-.708 0z" clip-rule="evenodd" />
                    </svg>
                </a>
            </td>
        </tr>
    }

</table>
@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of
@Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    sortOrder =
ViewBag.CurrentSort,
    currentFilter1 = ViewBag.currentFilter1,
currentProductCategory = ViewBag.currentProductCategory
}))
@{
    Html.RenderPartial("_ProductSalesPerDate");
}

